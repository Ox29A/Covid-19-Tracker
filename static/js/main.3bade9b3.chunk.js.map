{"version":3,"sources":["components/CovidTracker/Chart/Chart.module.css","components/CovidTracker/CountryPicker/CountryPicker.module.css","images/image.png","components/CovidTracker/Cards/Cards.jsx","api/index.js","components/CovidTracker/Chart/Chart.jsx","components/CovidTracker/CountryPicker/CountryPicker.jsx","pages/Home.js","pages/Covid-19.js","components/Appbar.js","App.js","index.js","components/CovidTracker/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","withStyles","theme","button","margin","input","props","classes","Covid19","state","fetchedData","setState","this","image","src","coronaImage","alt","CountryPicker","React","Component","history","createBrowserHistory","root","flexGrow","flex","drawerPaper","position","width","menuButton","marginLeft","marginRight","toolbarMargin","mixins","toolbar","aboveDrawer","zIndex","drawer","MyToolbar","onMenuClick","AppBar","Toolbar","IconButton","aria-label","onClick","MyDrawer","open","onClose","onItemClick","Drawer","paper","clsx","List","ListItem","Link","to","ListItemText","content","exact","path","Home","setDrawer","setTitle","toggleDrawer","console","log","App","Fragment","CssBaseline","Appbar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bade9b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__IH8Zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__27JAj\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport { fetchDailyData } from \"../../../api\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport { fetchCountries } from \"../../../api\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = (theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst FlatButtons = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Home Page</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFlatButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FlatButtons);\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"../components\";\r\nimport styles from \"../App.module.css\";\r\nimport { fetchData } from \"../api\";\r\nimport coronaImage from \"../images/image.png\";\r\n\r\nclass Covid19 extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Covid19;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Home from \"../pages/Home\";\r\nimport Covid19 from \"../pages/Covid-19\";\r\n\r\nconst drawerWidth = 240;\r\nconst history = createBrowserHistory();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    width: drawerWidth,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  toolbarMargin: theme.mixins.toolbar,\r\n  aboveDrawer: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n});\r\n\r\nconst MyToolbar = withStyles(styles)(({ classes, title, onMenuClick }) => (\r\n  <Fragment>\r\n    <AppBar className={classes.aboveDrawer}>\r\n      <Toolbar>\r\n        <IconButton\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"Menu\"\r\n          onClick={onMenuClick}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    <div className={classes.toolbarMargin} />\r\n  </Fragment>\r\n));\r\n\r\nconst MyDrawer = withStyles(styles)(\r\n  ({ classes, variant, open, onClose, onItemClick }) => (\r\n    <Router history={history}>\r\n      <Drawer\r\n        variant={variant}\r\n        open={open}\r\n        onClose={onClose}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div\r\n          className={clsx({\r\n            [classes.toolbarMargin]: variant === \"persistent\",\r\n          })}\r\n        />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to=\"/Home\"\r\n            onClick={onItemClick(\"Home\")}\r\n          >\r\n            <ListItemText>Home</ListItemText>\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to=\"/Portfolio\"\r\n            onClick={onItemClick(\"Portfolio\")}\r\n          >\r\n            <ListItemText>Portfolio</ListItemText>\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to=\"/Covid-Tracker\"\r\n            onClick={onItemClick(\"Covid Tracker\")}\r\n          >\r\n            <ListItemText>Covid Tracker</ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Route exact path=\"/Home\" component={Home} />\r\n        <Route exact path=\"/Covid-Tracker\" component={Covid19} />\r\n      </main>\r\n    </Router>\r\n  )\r\n);\r\n\r\nfunction AppBarInteraction({ classes, variant }) {\r\n  const [drawer, setDrawer] = useState(false);\r\n  const [title, setTitle] = useState(\"Home\");\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawer(!drawer);\r\n  };\r\n\r\n  const onItemClick = (title) => () => {\r\n    setTitle(title);\r\n    setDrawer(variant === \"temporary\" ? false : drawer);\r\n    setDrawer(!drawer);\r\n    console.log(title);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MyToolbar title={title} onMenuClick={toggleDrawer} />\r\n      <MyDrawer\r\n        open={drawer}\r\n        onClose={toggleDrawer}\r\n        onItemClick={onItemClick}\r\n        variant={variant}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(AppBarInteraction);\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport Appbar from \"./components/Appbar.js\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n          <Appbar />\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1PFP5\",\"card\":\"Cards_card__3afWE\",\"infected\":\"Cards_infected__v0ELY\",\"recovered\":\"Cards_recovered__1MRVD\",\"deaths\":\"Cards_deaths__1bnRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__122D_\",\"image\":\"App_image__IjOew\"};"],"sourceRoot":""}